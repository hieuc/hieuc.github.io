{"data":{"dataJson":{"content":[{"name":"Fusillade","tech":"Javascript","description":"A bullet-hell/adventure game for my Computational Worlds class at UWT.","github":"https://github.com/hieuc/Fusillade","htmlContent":"<p><b>Context</b></p><p>My two friends and I made this game as part of our course TCSS 491 Computational Worlds in Winter 2021. Our professor provides the 'game engine' in pure Javascript, and we expand it for our games. </p> <p>Everyone on our team was down to make the game in any genre. I was obsessed with Realm of the Mad God a lot at the time, so I pitched the idea of a bullet-hell game. Fusillade (few salad) was then the name, as it means 'a volley of shots,' which perfectly represents our game. </p> <p> <b>What I did</b></p> <p>As the lead of the team, I kept track of the weekly deadlines and overall progress of the game. On the technical side, I designed the core functionalities such as character/enemies base movement/attacks, terrains, UIs (hp bars, minimap, items), map generation, etc. My friends handled the art scouting department and expanded enemies and game mechanics. </p> ","demoImage":{"publicURL":"/static/df2637f060b9a9c8d1048841d168e197/fusillade.gif"},"links":[{"name":"Trailer","link":"https://www.youtube.com/watch?v=Amcvsrs9N2Q"},{"name":"Deployment","link":"https://ali92115.github.io/Fusillade_unbugged/"}]},{"name":"AlgoViz","tech":"ReactJS, ExpressJS, AWS","description":"An in development Algorithm Visualizer aims to aid UW students through their algorithm courses.","github":"https://github.com/hieuc/algo-visualizer","htmlContent":"<p><b>Context</b></p><p> AlgoViz started as a project of the Algorithm Visualizer team in the Huscii Coding Project club at UW Seattle. The idea of it potentially being used in data structure and algorithm classes was the main motivator for me. </p> <p> Because I am super new to React, the project went through multiple refactors whenever I saw the new path would benefit the project long term (from class components to functional ones, component design changes, or Typescript switch).</p><p> Currently, I am keeping the forked repo as a personal project and have been making rapid changes to it as a way to learn new techs. </p><p> <b>On the technical side...</b></p> <p> The frontend is React with Redux Toolkit for state management. The web server is Express where the algorithms are evaluated. There is a MongoDB for keeping feedback. The application is deployed on a single AWS EC2 instance. </p> <p> Credits to the members of the HCP club that gave valuable feedback to AlgoViz</p><p>I learned a lot about React, frontend designs, and application deployment. Next is Golang for the web server and some CI/CD.</p>","demoImage":{"publicURL":"/static/ece2b903f5f1622534200d900c931c29/algoviz.gif"},"links":[{"name":"Deployment","link":"https://algo-visualizer.herokuapp.com/"}]},{"name":"Android Group Chat","tech":"Java, ExpressJS, SQL","description":"An Android Chat Application with contacts, messaging, and weather. My team's product was certified by the professor to be an example for future courses.","github":"","htmlContent":"<p><b>Context</b></p><p> The project was an Android messenger application for TCSS 450 Mobile Development in Fall 2020. I worked on it in a team of 3-5 throughout the quarter.</p> <p> <b>What I did</b></p> <p> I took my share in the server side of the messaging functionality. That means creating API endpoints and managing the database. </p> <p> Aside from the required functionalities, I also implemented the extras such as 'seeing if others are typing' and image support.</p><p>While I was not very excited about mobile development, the project still was a learning experience for a lot of minor skills, like building APIs, password hash/salt, handling env variables, databases, etc.</p>","demoImage":{"publicURL":"/static/8ffa9109967428b4d9511b01857e2290/chat-app.png"},"links":[{"name":"Demo","link":"https://drive.google.com/file/d/1kh-vuQFGDvFCR-IvdrzY9s-qkT3H9YfG/view"}]},{"name":"Probability Minesweeper","tech":"Javascript, HTML, CSS","description":"The Windows XP Minesweeper, with some algorithms to guess the best next moves.","github":"https://github.com/hieuc/p-minesweeper","htmlContent":"<p><b>Context</b></p><p> I was a fan of Minesweeper back when it was on Windows XP and wanted to make an algorithm to automatically play it. More information on the site itself!</p>","demoImage":{"publicURL":"/static/87cf542e0bd9763bc1f38d9bf0a7f9e3/minesweeper.gif"},"links":[{"name":"Deployment","link":"https://hieuc.github.io/p-minesweeper/"}]},{"name":"Pentago","tech":"Javascript, HTML, CSS","description":"The pentago game, with a smart enemy to play against...","github":"https://github.com/hieuc/pentagoes","htmlContent":"<p><b>Context</b></p><p> Pentago was an assignment in my AI class to implement Alpha-Beta pruning and Minimax algorithms. All the game visuals and interactions were supposed to be through the terminal. I implemented a browser version to make the assignment more interesting. </p>","demoImage":{"publicURL":"/static/71075acdeeb4f5533024e14bf3b24399/pentago.gif"},"links":[{"name":"Deployment","link":"https://hieuc.github.io/pentagoes/"}]}]}}}